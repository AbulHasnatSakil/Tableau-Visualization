<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0617.1133                               -->
<workbook source-build='2021.1.3 (20211.21.0617.1133)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' inline='true' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Accelerator+Program+Data+Set_2021.02.04' name='excel-direct.1n9o8ic0drz4851en8l1813ywf4v'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/mishk/Documents/Excel Files/Accelerator+Program+Data+Set_2021.02.04.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1n9o8ic0drz4851en8l1813ywf4v' name='Accelerator' table='[Accelerator$]' type='table'>
          <columns gridOrigin='A1:L9995:no:A1:L9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Segment' ordinal='0' />
            <column datatype='string' name='Category' ordinal='1' />
            <column datatype='string' name='Sub-Category' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='date' name='Order Date' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Ship Status' ordinal='7' />
            <column datatype='string' name='State' ordinal='8' />
            <column datatype='integer' name='Profit' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='integer' name='Sales' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1n9o8ic0drz4851en8l1813ywf4v' name='Accelerator' table='[Accelerator$]' type='table'>
          <columns gridOrigin='A1:L9995:no:A1:L9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Segment' ordinal='0' />
            <column datatype='string' name='Category' ordinal='1' />
            <column datatype='string' name='Sub-Category' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='date' name='Order Date' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Ship Status' ordinal='7' />
            <column datatype='string' name='State' ordinal='8' />
            <column datatype='integer' name='Profit' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='integer' name='Sales' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L9995:no:A1:L9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Status]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Ship Status</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Accelerator]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Accelerator_D259AA3258CD48DEAEC04685047140DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Status]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Accelerator' datatype='table' name='[__tableau_internal_object_id__].[Accelerator_D259AA3258CD48DEAEC04685047140DB]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Status]' derivation='None' name='[none:Ship Status:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Status:nk]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Early Delivery&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;On Schedule&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Late Delivery&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#97cfd0'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Accelerator' id='Accelerator_D259AA3258CD48DEAEC04685047140DB'>
            <properties context=''>
              <relation connection='excel-direct.1n9o8ic0drz4851en8l1813ywf4v' name='Accelerator' table='[Accelerator$]' type='table'>
                <columns gridOrigin='A1:L9995:no:A1:L9995:0' header='yes' outcome='6'>
                  <column datatype='string' name='Segment' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='string' name='Sub-Category' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='date' name='Order Date' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Ship Status' ordinal='7' />
                  <column datatype='string' name='State' ordinal='8' />
                  <column datatype='integer' name='Profit' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='integer' name='Sales' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:State:nk]</rows>
        <cols>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{237A7896-C2BC-4FF2-9DA3-F42F4943BE23}' />
    </worksheet>
    <worksheet name='Formatting Area'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>For the </run>
                <run bold='true'><![CDATA[<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]> ]]></run>
                <run>and time period</run>
                <run bold='true'><![CDATA[ <[federated.0bh1x6g1kxc7241da9g9x066w2g7].[qr:Order Date:ok]>]]></run>
                <run fontcolor='#787878'>/</run>
                <run bold='true'><![CDATA[<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[yr:Order Date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>the sales was&#9;</run>
                <run bold='true'><![CDATA[<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-transparency' value='142' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]</rows>
        <cols>([federated.0bh1x6g1kxc7241da9g9x066w2g7].[yr:Order Date:ok] / [federated.0bh1x6g1kxc7241da9g9x066w2g7].[qr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{BEB87EC0-CD79-42A2-83D5-FC1BEC0588F9}' />
    </worksheet>
    <worksheet name='Formatting Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]' palette='red_black_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>In the main</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[ <[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]> ]]></run>
                <run bold='true'>and sub-category</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[ <[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Sub-Category:nk]>]]></run>
                <run bold='true'>, the profit is $ </run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]>:]]></run>
                <run><![CDATA[ <[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]>
]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]</rows>
        <cols>([federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk] / [federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{D45C9102-2AF4-49CE-826E-D5E52DA83479}' />
    </worksheet>
    <worksheet name='Formatting Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]</rows>
        <cols>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{BB9F9D6F-9F62-49BE-8C84-CA1610AE51F6}' />
    </worksheet>
    <worksheet name='Formatting Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Status]' role='dimension' type='nominal' />
            <column-instance column='[Ship Status]' derivation='None' name='[none:Ship Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Ship Status:nk]' />
              <size column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' />
              <wedge-size column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Ship Status:nk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[pcto:sum:Sales:qk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='12'><![CDATA[<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Ship Status:nk]>]]></run>
                <run><![CDATA[
<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]>
]]></run>
                <run fontcolor='#e15759'><![CDATA[(<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[pcto:sum:Sales:qk]>)]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='1.1314364671707153' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3D50AC26-799D-4C08-8D25-AC8386ED6588}' />
    </worksheet>
    <worksheet name='Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Quantity:qk]</rows>
        <cols>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{88B8C3AC-B501-4608-B8D2-98017CE0582A}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]' />
              <wedge-size column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' />
              <size column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[pcto:sum:Sales:qk]' />
              <text column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]>]]></run>
                <run><![CDATA[
<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]>
]]></run>
                <run fontcolor='#e15759'><![CDATA[(<[federated.0bh1x6g1kxc7241da9g9x066w2g7].[pcto:sum:Sales:qk]>)]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C6AB8E6C-5073-45FB-AE0D-1F844C9246E0}' />
    </worksheet>
    <worksheet name='quick table Calculation 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[cum:sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>([federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk] + ([federated.0bh1x6g1kxc7241da9g9x066w2g7].[cum:sum:Sales:qk] + [federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Quantity:qk]))</rows>
        <cols>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{EEDF9538-F54F-47F1-ACF1-54E59980D447}' />
    </worksheet>
    <worksheet name='quick table Calculation 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[cum:sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk] + [federated.0bh1x6g1kxc7241da9g9x066w2g7].[cum:sum:Sales:qk])</rows>
        <cols>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{34B6CC98-9BDF-4412-8F31-3803DCE40ECC}' />
    </worksheet>
    <worksheet name='quick table Calculation 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Accelerator (Accelerator+Program+Data+Set_2021.02.04)' name='federated.0bh1x6g1kxc7241da9g9x066w2g7' />
          </datasources>
          <datasource-dependencies datasource='federated.0bh1x6g1kxc7241da9g9x066w2g7'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Day-Trunc' name='[tdy:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[win:sum:Quantity:qk:68]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-30' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[win:sum:Quantity:qk:68]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='73' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[win:sum:Quantity:qk:68]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Quantity:qk] + [federated.0bh1x6g1kxc7241da9g9x066w2g7].[win:sum:Quantity:qk:68])</rows>
        <cols>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[tdy:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{120BBEC5-577C-4F7F-93AC-8817900C5ED3}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{43A937AA-3412-4C65-9281-C72C5AB1B9B5}' />
    </window>
    <window class='worksheet' name='Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D650605-AE92-4D2C-AC71-F444CFB0F84A}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7FD974E3-B2EC-45BA-AD27-5F698C4E8FEE}' />
    </window>
    <window class='worksheet' name='Formatting Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]</field>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C9070E2-BD80-44B8-86EE-BF5E462327E7}' />
    </window>
    <window class='worksheet' name='Formatting Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Category:nk]</field>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:City:nk]</field>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]</field>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Ship Status:nk]</field>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[tqr:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00ED7BB3-7847-49F8-8BDD-067A89F988F7}' />
    </window>
    <window class='worksheet' name='Formatting Area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Region:nk]</field>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B9EA523-8E56-47F8-884B-09388B9C2A0C}' />
    </window>
    <window class='worksheet' name='Formatting Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Ship Status:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Ship Status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A08F2245-C282-4C93-9DAF-78EAD581043E}' />
    </window>
    <window class='worksheet' name='quick table Calculation 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAFF1EB1-1B4D-4A42-8112-5A685149AAE6}' />
    </window>
    <window class='worksheet' name='quick table Calculation 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A80A0DF-5F6F-4227-8281-FB53560EC510}' />
    </window>
    <window class='worksheet' maximized='true' name='quick table Calculation 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0bh1x6g1kxc7241da9g9x066w2g7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bh1x6g1kxc7241da9g9x066w2g7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{126520F6-9B14-4020-A057-8174DF228711}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Formatting Area' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAf0ElEQVR4nO2dyZMbx7afv6wqzEAP6LlbFKmJ0tWNd4fwjXhhe+mtl7b33vif9O7ZN7x4
      vu/6PUkUJbLJZs8DujGjUEPm8aIaLQ49AGjMqE+hoEQ2gcyqczJPnvzlSSUiQkzMnGIN6oNi
      P4qZRgbmAI1GY1AfFRMzMgbmADHTjQlc/s9f/xfHpdr17wgH+wcf/MwvP/4r//z3H4gme6Fa
      rY66mQNHDWoNUK/XKRQKg/iomDHw7u9/RX31j7z9l/9Js55huQiVSpOT/T12Pv+O7e+f0zg+
      Ysn2KDtZDk9K6EqJ7a01LtoJ/st//k/j7kJfOONuQMxksPnVN/zvv/2VrSfPWPeyVK7esLS8
      RCL5PSv5Bb784gkvTvY49RxyKmC9WCRTzIKd4vfPNsfd/L6JZ4A+ERGUUuNuxsiY1f7Ga4A+
      mbdF/6z2d/pCINHsvXlDZmGZSumCja0tWl5AioBq2/Dl08/G3cLBogNe7b5haXmFi8syO5sr
      eFqh3SokC2ytr4y7hQOlXr3k+KzC8mKGtrZQfgsnU6BRKbH1+VfkM8mBft8UzgAWy8tLePVL
      ius7uIFBSUi9UafRbI67cYPHciguL3JVvuLJSh4/UUAHbdptj5PT03G3buDk8gtkkonoveqA
      peUlAr/O0vIG5XJl4N83dQ4gJmRv/5BEpsDp0TssE3B8cobBxrbtcTdv4Jigyd7hGYVclrcn
      V9C64visRDabo7i8PO7mDZyzowPcIETpAC/UvNvbx3EyXJwdks3nBv59SiIe/UHztgiO+zsb
      3KwBHrvIcV13JrMEdxH3dzZwAJRSA/HuWRwh7iPu7/QzdWuAmJhBEjtAzFwTO0DMXNPVRli7
      WePt/jEb66tc1lospi18EizksoRhSLE4e+m4mPmgKwdIZbNot8VlvU3GUbS1oMTjlx9e8tWf
      /gPGGLTWhGE47PZODHF/Z4OuHKBVr+OkEiQsqLY8FtMKnyRffvs97VoZK7eObds4zvQpK/ol
      7u9s0FWPcgvLfPf7OMyJmT3iRXDMXBM7QMxcEztAzFwTO0DMXBM7QMxcEztAzFwTO0DMXBM7
      QMxc09VGmNes83b/kOLKCuVak+WcgydJFvMZgjBkpVgcdjtjYoZCVw6QzOQo5DLUmw2azRa5
      9CLEWqC4vzNAVw5QLZ1Qbnos5jIkHAfRAQEJvvz293j1WAs0D8xqf7vq0dL6Dkvr0X8/GWZr
      YmJGTLwIjplrYgeImWtiB4iZa2IHiJlrYgeImWtiB4iZa2IHiJlrYgeImWu62gjToc/+wQmf
      7WxwfHZFsZDCI0E+nURrTS43+LLVMTGjoDsH0Ia0FfLil11yhUWuqg1EDAfnp3z2/A9kYi3Q
      zDOr/e2uLlDlgqNyi7XlAqWLEoXFFIYkaxsbuM0G1lJuZrUidxH3dzboTgu08YS/bEQqoKdP
      h9qemJiREi+CY+aa2AFi5prYAWLmmtgBYuaa2AFi5prYAWLmmtgBYuaa2AFi5pquHEAHHm/e
      7KFFKJVK1MolSuUa7XabZrM57DbGxAyNrnaCjYGMrTm/KHFyWmJ1MYuROvu/nvL5t7EWaB6Y
      1f525QDNyjlH5RYrxsKtV2inFUYl2NjcpNVssBprgWaeWe2vEhEZxAfV63UKhcIgPmoqiPs7
      G8SL4Ji5JnaAmLkmdoCYuSZ2gJi5JnaAmLkmdoCYuSZ2gJi5JnaAmLmmu7Iogce7g2M2N1Y4
      v2pQzCfwJEk+k0LrkHw+P+x2xsQMhe60QAIZ2+CaBDrwqNQDxDQ4eHXC59/9kWysBZp5ZrW/
      3WmByuccV1wWvXe0tQPGIyTJxtY2rUaD1cVYCzTrzGp/u64L9O824tvBYmaPeBEcM9fEDhAz
      18QOEDPXxA4QM9fEDhAz18QOEDPXxA4QM9fEDhAz13S1ESZiaDZdspkUbT8kYSsMFo5tISIz
      uUMYMx90Zbm+2+J4b5cwvYDxfTJJhRYLFXpki1tsry8jIhhjht3eiSHu72zQVQgU+m1Uboms
      DY5toSwLy1IEQYBSChFhQNVVpoa4v7NBVzNAIp2jkNUsLy3R9gPSjkLjkEzYGGOwLOvm33kh
      7u/0IiIExpC07e4cIJnOsJnOAJBKpYbauJiYYSIi7NfquDrku2IxzgLFzA8iwl61xkG9fmP4
      cfomZi4QEXYrVU6bTSylbn4/doCYmceI8Lpc4bzV+sD4Id4Ii5lx5B7jh9gB7sTMYWp31jAi
      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
      Bt0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Formatting Bar' width='192'>
      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
      CD3j/wO0w4ZOYf5KBAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Formatting Line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Formatting Pie' width='192'>
      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
      GgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Line' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='quick table Calculation 1' width='192'>
      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
      W/P/ASMzZvrIHQqIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='quick table Calculation 2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='quick table Calculation 3' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
